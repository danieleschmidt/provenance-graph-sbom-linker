# Intelligent Performance Optimization Configuration
# For Provenance Graph SBOM Linker

optimization_config:
  # Adaptive caching strategies
  adaptive_caching:
    # Multi-level cache hierarchy
    levels:
      - name: "l1_memory"
        type: "in_memory"
        size_mb: 256
        ttl_seconds: 300
        eviction_policy: "lru"
        hit_rate_threshold: 0.8
        
      - name: "l2_redis"
        type: "redis_cluster"
        size_mb: 2048
        ttl_seconds: 3600
        eviction_policy: "allkeys-lru"
        hit_rate_threshold: 0.6
        
      - name: "l3_persistent"
        type: "disk_cache"
        size_mb: 10240
        ttl_seconds: 86400
        compression: "zstd"
        hit_rate_threshold: 0.4

    # Cache warming strategies
    warming_strategies:
      - name: "sbom_preload"
        trigger: "system_startup"
        data_sources: ["frequently_accessed_sboms", "recent_sboms"]
        priority: "high"
        
      - name: "provenance_graph_preload"
        trigger: "low_traffic_period"
        data_sources: ["critical_artifacts", "recent_builds"]
        priority: "medium"
        
      - name: "compliance_data_preload"
        trigger: "scheduled"
        schedule: "0 2 * * *"  # Daily at 2 AM
        data_sources: ["active_projects", "recent_scans"]
        priority: "low"

    # Dynamic cache sizing
    dynamic_sizing:
      enabled: true
      monitoring_interval_seconds: 60
      scaling_factors:
        memory_pressure_threshold: 0.85
        cpu_utilization_threshold: 0.75
        network_latency_threshold_ms: 100
      scaling_rules:
        - condition: "memory_pressure > threshold"
          action: "reduce_cache_size"
          factor: 0.8
        - condition: "hit_rate < target"
          action: "increase_cache_size" 
          factor: 1.2
        - condition: "network_latency > threshold"
          action: "prioritize_local_cache"

  # Intelligent query optimization
  query_optimization:
    # Neo4j query optimization
    neo4j:
      # Adaptive query planning
      adaptive_planning:
        enabled: true
        learning_period_hours: 24
        optimization_techniques:
          - "index_suggestions"
          - "query_rewriting"
          - "join_optimization"
          - "predicate_pushdown"
          
      # Query result caching
      result_caching:
        enabled: true
        cache_duration_seconds: 1800
        max_cache_size_mb: 512
        cache_key_strategy: "query_hash_with_params"
        
      # Connection pooling optimization
      connection_pooling:
        min_connections: 5
        max_connections: 50
        connection_timeout_seconds: 30
        idle_timeout_seconds: 300
        adaptive_sizing: true
        
      # Query complexity analysis
      complexity_analysis:
        enabled: true
        max_query_time_seconds: 30
        complexity_scoring:
          node_traversal_weight: 1.0
          relationship_weight: 0.5
          filter_weight: 0.2
        optimization_strategies:
          - "break_complex_queries"
          - "use_materialized_views"
          - "implement_query_pagination"

    # SBOM processing optimization
    sbom_processing:
      # Parallel processing
      parallel_processing:
        enabled: true
        worker_pool_size: 8
        queue_buffer_size: 1000
        batch_size: 10
        processing_strategy: "pipeline"
        
      # Component deduplication
      deduplication:
        enabled: true
        hash_algorithm: "sha256"
        similarity_threshold: 0.95
        deduplication_scope: "global"
        
      # Incremental processing
      incremental_processing:
        enabled: true
        change_detection: "content_hash"
        delta_storage: "redis"
        checkpoint_interval_seconds: 300

  # Resource optimization
  resource_optimization:
    # Memory management
    memory_management:
      # Garbage collection tuning
      gc_tuning:
        gc_percent: 100
        gc_max_sweep_time_seconds: 0.5
        force_gc_interval_seconds: 300
        memory_threshold_percent: 85
        
      # Memory pooling
      memory_pooling:
        enabled: true
        pool_types:
          - name: "small_objects"
            size_bytes: 1024
            count: 1000
          - name: "medium_objects"
            size_bytes: 8192
            count: 500
          - name: "large_objects"
            size_bytes: 65536
            count: 100
            
      # Memory compression
      compression:
        enabled: true
        algorithm: "zstd"
        compression_level: 3
        min_size_bytes: 1024

    # CPU optimization
    cpu_optimization:
      # Thread pool management
      thread_pools:
        - name: "api_handlers"
          core_threads: 4
          max_threads: 16
          queue_size: 1000
          keep_alive_seconds: 60
          
        - name: "background_processing"
          core_threads: 2
          max_threads: 8
          queue_size: 500
          keep_alive_seconds: 300
          
        - name: "data_processing"
          core_threads: 2
          max_threads: 4
          queue_size: 200
          keep_alive_seconds: 120

      # CPU affinity optimization
      cpu_affinity:
        enabled: true
        api_threads_cpus: [0, 1, 2, 3]
        background_threads_cpus: [4, 5]
        data_processing_cpus: [6, 7]

  # Network optimization
  network_optimization:
    # Connection optimization
    connection_optimization:
      # HTTP/2 settings
      http2:
        enabled: true
        max_concurrent_streams: 1000
        initial_window_size: 65536
        header_table_size: 4096
        
      # Keep-alive settings
      keep_alive:
        enabled: true
        timeout_seconds: 30
        max_idle_connections: 100
        max_connections_per_host: 10

    # Compression optimization
    compression:
      # Response compression
      response_compression:
        enabled: true
        algorithms: ["gzip", "br", "zstd"]
        min_size_bytes: 1024
        compression_level: 6
        
      # Request compression
      request_compression:
        enabled: true
        max_size_bytes: 10485760  # 10MB
        supported_types: ["application/json", "text/plain"]

    # CDN integration
    cdn_integration:
      enabled: false  # Enable for production
      provider: "cloudflare"
      cache_rules:
        - path: "/api/v1/static/*"
          ttl_seconds: 86400
        - path: "/api/v1/artifacts/*"
          ttl_seconds: 3600
          vary_headers: ["Accept-Encoding"]

  # Auto-scaling configuration
  auto_scaling:
    # Horizontal scaling
    horizontal_scaling:
      enabled: true
      min_replicas: 2
      max_replicas: 10
      target_cpu_utilization: 70
      target_memory_utilization: 80
      scale_up_stabilization_seconds: 300
      scale_down_stabilization_seconds: 600
      
    # Vertical scaling
    vertical_scaling:
      enabled: true
      min_cpu_cores: 0.5
      max_cpu_cores: 4.0
      min_memory_mb: 512
      max_memory_mb: 8192
      adjustment_interval_seconds: 900

    # Predictive scaling
    predictive_scaling:
      enabled: true
      prediction_window_hours: 24
      historical_data_days: 30
      ml_model: "linear_regression"
      confidence_threshold: 0.8

  # Performance monitoring
  performance_monitoring:
    # Real-time metrics
    real_time_metrics:
      collection_interval_seconds: 15
      retention_hours: 168  # 1 week
      metrics:
        - "cpu_utilization"
        - "memory_utilization"
        - "disk_io"
        - "network_io"
        - "response_time"
        - "throughput"
        - "error_rate"

    # Performance alerts
    performance_alerts:
      - name: "high_cpu_utilization"
        threshold: 85
        duration_seconds: 300
        action: "scale_up"
        
      - name: "high_memory_utilization"
        threshold: 90
        duration_seconds: 180
        action: "restart_with_more_memory"
        
      - name: "slow_response_time"
        threshold_ms: 2000
        duration_seconds: 120
        action: "investigate_bottlenecks"

    # Performance benchmarking
    benchmarking:
      enabled: true
      benchmark_suite: "custom_provenance_benchmarks"
      run_frequency: "weekly"
      baseline_comparison: true
      performance_regression_threshold: 0.05  # 5%

  # Machine learning optimization
  ml_optimization:
    # Workload prediction
    workload_prediction:
      enabled: true
      model_type: "time_series_forecasting"
      training_data_days: 90
      prediction_horizon_hours: 6
      retrain_frequency_days: 7
      
    # Anomaly detection
    anomaly_detection:
      enabled: true
      detection_algorithms:
        - "statistical_outlier_detection"
        - "isolation_forest"
        - "lstm_autoencoder"
      sensitivity: "medium"
      alert_threshold: 0.8

    # Adaptive optimization
    adaptive_optimization:
      enabled: true
      optimization_cycle_hours: 6
      learning_algorithms:
        - "genetic_algorithm"
        - "simulated_annealing"
        - "reinforcement_learning"
      performance_metrics:
        - "throughput"
        - "latency"
        - "resource_utilization"
        - "cost_efficiency"