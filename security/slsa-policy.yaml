# SLSA (Supply-chain Levels for Software Artifacts) Policy Configuration
# Enhanced compliance automation for maturing repository

apiVersion: security.slsa.dev/v1beta1
kind: SLSAPolicy
metadata:
  name: provenance-slsa-policy
  version: "3.0"
  repository: "provenance-graph-sbom-linker"
spec:
  # Target SLSA level for this maturing repository
  targetLevel: 2
  
  # Build requirements
  build:
    # Level 1 requirements
    scriptedBuild:
      required: true
      allowedBuilders:
        - "https://github.com/actions"
        - "https://gitlab.com"
        - "https://tekton.dev"
        - "https://cloudbuild.googleapis.com"
    
    # Level 2 requirements
    versionControlled:
      required: true
      allowedSources:
        - "git+https://github.com"
        - "git+https://gitlab.com"
        - "git+https://bitbucket.org"
    
    reproducible:
      required: true
      toleranceMinutes: 60  # Allow 1 hour variance for timestamps
    
    # Level 3 requirements (aspirational)
    isolatedBuilder:
      required: false  # Not enforced yet for Level 2
      future: true
      targetDate: "2025-06-01"
    
    # Build environment
    environment:
      immutable: true
      ephemeral: true
      hardening:
        - "no-network-after-checkout"
        - "readonly-filesystem"
        - "limited-capabilities"
    
    # Dependencies
    dependencies:
      pinned: true
      verified: true
      sbomRequired: true
      allowedSources:
        - "proxy.golang.org"
        - "registry.npmjs.org"
        - "registry-1.docker.io"
        - "ghcr.io"
    
  # Provenance requirements
  provenance:
    format: "in-toto-v1"
    required: true
    
    # Minimum attestation requirements
    attestations:
      buildProvenance:
        required: true
        format: "slsa-provenance-v0.2"
        includeParameters: true
        includeMaterials: true
      
      sbom:
        required: true
        formats: ["cyclonedx-json", "spdx-json"]
        includeTransitive: true
      
      vulnerabilityScan:
        required: true
        maxAge: "24h"
        tools: ["trivy", "grype", "snyk"]
      
      qualityGates:
        required: true
        tests: true
        coverage: true
        linting: true
        security: true
    
    # Signature requirements
    signatures:
      required: true
      algorithms: ["ecdsa-p256-sha256", "rsa-pss-sha256"]
      keyManagement:
        - "cosign-keyless"
        - "sigstore"
        - "kms"
      
      transparency:
        rekor: true
        fulcio: true
        ctlog: true
    
    # Storage and distribution
    storage:
      immutable: true
      availability: "99.9%"
      retention: "7 years"
      
      distributionPoints:
        - "https://rekor.sigstore.dev"
        - "https://search.sigstore.dev"
        - "https://oci-registry.example.com"

  # Verification policies
  verification:
    # Artifact verification
    artifacts:
      signatureRequired: true
      provenanceRequired: true
      sbomRequired: true
      
      # Policy checks
      policies:
        - name: "builder-verification"
          type: "builder-id"
          values: ["https://github.com/actions/runner"]
        
        - name: "source-verification"
          type: "source-uri"
          pattern: "git+https://github.com/your-org/provenance-graph-sbom-linker@refs/heads/main"
        
        - name: "workflow-verification"
          type: "workflow-ref"
          values: [".github/workflows/release.yml@refs/heads/main"]
    
    # Deployment verification
    deployment:
      runtimeVerification: true
      continuousMonitoring: true
      
      policies:
        - name: "container-verification"
          type: "container-signature"
          required: true
        
        - name: "k8s-admission-control"
          type: "kubernetes-admission"
          webhook: "https://admission.security.example.com/validate"
    
    # Exceptions and overrides
    exceptions:
      - name: "emergency-deployment"
        condition: "severity == 'critical' AND approved_by == 'security-team'"
        duration: "24h"
        notification: "slack:#security-alerts"
      
      - name: "legacy-compatibility"
        condition: "artifact_type == 'legacy' AND version < '2.0.0'"
        expires: "2025-12-31"
        mitigation: "additional-scanning"

  # Compliance mapping
  compliance:
    frameworks:
      nistSSDF:
        controls:
          - id: "PS.1.1"
            requirement: "Protect development environment"
            implementation: "isolated-builder"
          - id: "PS.2.1" 
            requirement: "Protect source code"
            implementation: "signed-commits"
          - id: "PW.4.1"
            requirement: "Data flow analysis"
            implementation: "dependency-tracking"
          - id: "PW.7.1"
            requirement: "Identify vulnerabilities"
            implementation: "vulnerability-scanning"
      
      euCRA:
        articles:
          - id: "Article 10"
            requirement: "Cybersecurity requirements"
            implementation: "security-attestations"
          - id: "Article 11"
            requirement: "Vulnerability disclosure"
            implementation: "transparency-log"
      
      iso27001:
        controls:
          - id: "A.12.6.1"
            requirement: "Management of technical vulnerabilities"
            implementation: "continuous-scanning"
          - id: "A.14.2.1"
            requirement: "Secure development policy"
            implementation: "slsa-compliance"

  # Monitoring and alerting
  monitoring:
    violations:
      alerting:
        channels: ["slack:#security-alerts", "email:security@example.com"]
        severity: "high"
      
      actions:
        - type: "block-deployment"
          condition: "slsa_level < target_level"
        - type: "quarantine-artifact"
          condition: "signature_invalid OR provenance_missing"
        - type: "notify-security-team"
          condition: "policy_violation"
    
    metrics:
      - name: "slsa_compliance_rate"
        type: "percentage"
        target: 95
      - name: "provenance_generation_time"
        type: "duration"
        target: "< 5m"
      - name: "verification_success_rate"
        type: "percentage"
        target: 99.5
    
    dashboards:
      grafana:
        enabled: true
        panels:
          - "SLSA Level Distribution"
          - "Compliance Trends"
          - "Violation Types"
          - "Verification Latency"

  # Integration points
  integrations:
    cicd:
      githubActions:
        workflowTemplate: ".github/workflows/slsa-build.yml"
        attestationUpload: true
        provenanceGeneration: true
      
      tekton:
        taskTemplate: "tekton/slsa-task.yaml"
        chainsIntegration: true
    
    artifactStores:
      - type: "oci-registry"
        url: "ghcr.io/your-org"
        attestationSupport: true
      - type: "maven-central"
        url: "https://repo1.maven.org"
        signatureRequired: true
    
    securityTools:
      - name: "cosign"
        purpose: "signing"
        integration: "native"
      - name: "rekor"
        purpose: "transparency"
        integration: "webhook"
      - name: "fulcio"
        purpose: "certificate-authority"
        integration: "oidc"

# Automation rules
automation:
  # Auto-generation of SLSA artifacts
  generation:
    provenance:
      trigger: "on-build"
      format: "in-toto-v1"
      upload: ["rekor", "oci-registry"]
    
    sbom:
      trigger: "on-dependency-change"
      tools: ["syft", "cyclonedx"]
      validation: true
    
    attestations:
      trigger: "on-quality-gate"
      include: ["tests", "coverage", "security-scan"]
  
  # Auto-verification
  verification:
    schedule: "0 */6 * * *"  # Every 6 hours
    scope: "deployed-artifacts"
    actions: ["alert", "report", "remediate"]
  
  # Auto-remediation
  remediation:
    enabled: true
    conditions:
      - "signature_expired"
      - "vulnerability_critical"
      - "policy_violation"
    
    actions:
      - type: "rebuild"
        condition: "signature_expired"
        automatic: true
      - type: "patch"
        condition: "vulnerability_critical"
        automatic: false
        approval: "security-team"