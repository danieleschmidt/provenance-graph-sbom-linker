---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: provenance-linker
  namespace: provenance-system
  labels:
    app.kubernetes.io/name: provenance-graph-sbom-linker
    app.kubernetes.io/component: server
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: provenance-graph-sbom-linker
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: provenance-graph-sbom-linker
        app.kubernetes.io/component: server
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: provenance-linker
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: provenance-linker
        image: ghcr.io/danieleschmidt/provenance-graph-sbom-linker:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: CONFIG_FILE
          value: "/etc/config/config.yaml"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: provenance-linker-secrets
              key: JWT_SECRET
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: provenance-linker-secrets
              key: NEO4J_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: provenance-linker-secrets
              key: REDIS_PASSWORD
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: provenance-linker-secrets
              key: API_KEY
        - name: COSIGN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cosign-keys
              key: COSIGN_PASSWORD
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: cosign-keys
          mountPath: /etc/cosign
          readOnly: true
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /var/log/provenance-linker
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: config
        configMap:
          name: provenance-linker-config
      - name: cosign-keys
        secret:
          secretName: cosign-keys
          defaultMode: 0400
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - provenance-graph-sbom-linker
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - server
              topologyKey: kubernetes.io/hostname